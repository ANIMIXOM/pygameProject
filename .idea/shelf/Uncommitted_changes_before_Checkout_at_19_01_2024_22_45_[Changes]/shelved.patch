Index: run.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import random\r\nimport random\r\nimport sys\r\nfrom pygame.transform import scale\r\nimport pygame\r\nfrom pygame.image import load\r\n\r\npygame.init()\r\ngui_torg = False\r\n\r\n\r\nclass gui_torg(pygame.sprite.Sprite):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.gui_sell = pygame.image.load(\"datafiles/sell.png\")\r\n        self.rect_sell = self.gui_sell.get_rect()\r\n        self.gui_buy_fire = pygame.image.load(\"datafiles/fire_buy.png\")\r\n        self.gui_buy_el = pygame.image.load(\"datafiles/el_buy.png\")\r\n        self.sound = pygame.mixer.Sound(\"datafiles/torg.mp3\")\r\n\r\n    def update(self):\r\n        screen.blit(self.gui_buy_el, (300, 200))\r\n        screen.blit(self.gui_buy_fire, (100, 200))\r\n        screen.blit(self.gui_sell, (200, 200))\r\n        key = pygame.key.get_pressed()\r\n        if key[pygame.K_g]:\r\n            if inventory[\"wearpon\"] > 0:\r\n                inventory[\"wearpon\"] -= 1\r\n                inventory[\"rupis\"] += 1\r\n                self.sound.play(1)\r\n            else:\r\n                print(\"У вас нету товара\")\r\n        if key[pygame.K_h]:\r\n            if inventory[\"rupis\"] >= 3:\r\n                inventory[\"rupis\"] -= 3\r\n                inventory[\"fire_cristal\"] += 1\r\n                self.sound.play(1)\r\n            else:\r\n                print(\"Нема деняг\")\r\n\r\n\r\nclass torg(pygame.sprite.Sprite):\r\n    def __init__(self):\r\n        super().__init__(see_sprites)\r\n        self.image = pygame.image.load(\"datafiles/torg.png\")\r\n        self.rect = self.image.get_rect()\r\n        self.rect.x = 500\r\n        self.rect.y = 300\r\n\r\n    def update(self):\r\n        if pygame.sprite.spritecollide(self, player_sprites, dokill=False):\r\n            global fand_torg\r\n            fand_torg = True\r\n            pl.rect.x += 200\r\n        screen.blit(self.image, (700, 280))\r\n\r\n\r\nmaps = \"map0\"\r\n\r\n\r\nclass gui:\r\n    def __init__(self):\r\n        self.font = pygame.font.Font(\"datafiles/Lightman.ttf\", 20)\r\n        self.text_surface = self.font.render(\"99\", True, (255, 255, 255))\r\n        self.healim = pygame.image.load(\"datafiles/health.png\")\r\n        self.healim = pygame.transform.scale(self.healim, (50, 50))\r\n        self.summ = str(inventory[\"rupis\"])\r\n        self.rup = self.font.render(self.summ, True, (20, 255, 20))\r\n\r\n    def update(self):\r\n        screen.blit(self.healim, (10, 10))\r\n        screen.blit(self.text_surface, (20, 20))\r\n        screen.blit(self.rup, (100, 20))\r\n        self.summ = str(inventory[\"rupis\"])\r\n        self.rup = self.font.render(self.summ, True, (20, 255, 20))\r\n        self.text_surface = self.text_surface = self.font.render(\r\n            str(pl.hp), True, (255, 255, 255)\r\n        )\r\n\r\n\r\nclass Evil(pygame.sprite.Sprite):\r\n    def __init__(self, player_sprites, x, y, image, hp):\r\n        super().__init__(evil_sprites)\r\n        self.poison = 0\r\n        self.hp = int(hp)\r\n        self.image = image\r\n        self.rect = self.image.get_rect()\r\n        self.rect.x = x\r\n        self.rect.y = y\r\n        self.player_sprites = player_sprites\r\n        self.give_money = False\r\n\r\n    def update(self):\r\n        global flag_is_dying, flag_is_dying_enemy\r\n        if self.hp > 0:\r\n            player = self.player_sprites.sprites()[0]\r\n            distance = abs(pl.rect.x - self.rect.x)\r\n            if self.hp >= 0:\r\n                # Проверяем дистанцию между игроком и врагом\r\n                if distance < 200:\r\n                    # Идем на игрока\r\n                    if pl.rect.x - self.rect.x > 0:\r\n                        self.rect.x += 8\r\n                    else:\r\n                        self.rect.x -= 8\r\n\r\n                # Проверяем столкновение с игроком\r\n                if pygame.sprite.spritecollide(self, self.player_sprites, False):\r\n                    pl.hp -= 1\r\n                if pl.hp == 0:\r\n                    flag_is_dying = True\r\n                self.hp -= self.poison\r\n        else:\r\n            if not flag_is_dying_enemy:\r\n                self.image = load('datafiles/evil_death.png')\r\n                self.rect.y += 45\r\n                flag_is_dying_enemy = True\r\n        if not self.give_money:\r\n            inventory[\"wearpon\"] += random.randint(1, 3)\r\n            self.give_money = True\r\n\r\n\r\nclass enger_spire(pygame.sprite.Sprite):\r\n    def __init__(self, sheet, columns, rows, x, y):\r\n        super().__init__(eff_sprites)\r\n        self.frames = []\r\n        self.cut_sheet(sheet, columns, rows)\r\n        self.cur_frames = 0\r\n        self.image = self.frames[self.cur_frames]\r\n        self.rect = self.rect.move(x, y)\r\n\r\n    def cut_sheet(self, sheet, columns, rows):\r\n        self.rect = pygame.Rect(\r\n            0, 0, sheet.get_width() // columns, sheet.get_height() // rows\r\n        )\r\n        for j in range(rows):\r\n            for i in range(columns):\r\n                frame_location = (self.rect.w * i, self.rect.h * j)\r\n                self.frames.append(\r\n                    sheet.subsurface(pygame.Rect(frame_location, self.rect.size))\r\n                )\r\n\r\n    def update(self):\r\n        self.cur_frames += 1\r\n        self.image = self.frames[self.cur_frames]\r\n        if self.cur_frames >= 2:\r\n            self.cur_frames = 0\r\n\r\n\r\nclass Player(pygame.sprite.Sprite):\r\n    def __init__(self, sheet, columns, rows, x, y):\r\n        super().__init__(player_sprites)\r\n        self.hp = 100\r\n        self.frames_hod = []\r\n        self.frames_at = []\r\n        self.cut_sheet_hod(sheet, columns, rows)\r\n        self.cut_sheet_attack(pygame.image.load(\"datafiles/anim_at.png\"), 3, 1)\r\n        self.cur_frame = 0\r\n        self.image = self.frames_hod[self.cur_frame]\r\n        self.rect = self.rect.move(x, y)\r\n\r\n    def cut_sheet_hod(self, sheet, columns, rows):\r\n        self.rect = pygame.Rect(\r\n            0, 0, sheet.get_width() // columns, sheet.get_height() // rows\r\n        )\r\n        for j in range(rows):\r\n            for i in range(columns):\r\n                frame_location = (self.rect.w * i, self.rect.h * j)\r\n                self.frames_hod.append(\r\n                    sheet.subsurface(pygame.Rect(frame_location, self.rect.size))\r\n                )\r\n\r\n    def cut_sheet_attack(self, sheet, columns, rows):\r\n        self.rect = pygame.Rect(\r\n            0, 0, sheet.get_width() // columns, sheet.get_height() // rows\r\n        )\r\n        for j in range(rows):\r\n            for i in range(columns):\r\n                frame_location = (self.rect.w * i, self.rect.h * j)\r\n                self.frames_at.append(\r\n                    sheet.subsurface(pygame.Rect(frame_location, self.rect.size))\r\n                )\r\n\r\n    def update_hod(self, n):\r\n        self.cur_frame = self.cur_frame + 1\r\n        if n == \"r\":\r\n            self.rect.x += 30\r\n            self.image = self.frames_hod[self.cur_frame]\r\n        else:\r\n            self.rect.x -= 30\r\n            images = self.frames_hod[self.cur_frame]\r\n            images = pygame.transform.flip(images, True, False)\r\n            self.image = images\r\n\r\n        if self.cur_frame == 4:\r\n            self.cur_frame = 1\r\n\r\n    def update_attack(self):\r\n        self.cur_frame = self.cur_frame + 1\r\n        if not otr:\r\n            self.image = self.frames_at[self.cur_frame]\r\n        else:\r\n            images = self.frames_at[self.cur_frame]\r\n            images = pygame.transform.flip(images, True, False)\r\n            self.image = images\r\n        if self.cur_frame == 2:\r\n            self.cur_frame = 0\r\n\r\n\r\ndef start_or_over_screen():\r\n    global flag_is_dying\r\n    if flag_is_dying:\r\n        screen.blit(\r\n            scale(load(\"datafiles/game_over.png\"), (1280, 720)),\r\n            (0, 0),\r\n        )\r\n    else:\r\n        screen.blit(scale((load(\"datafiles/start_game.png\")), (1280, 720)), (0, 0))\r\n    pl.rect.x = 10\r\n    pl.rect.y = 510\r\n    pl.hp = 100\r\n    flag_is_dying = False\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                pygame.quit()\r\n                sys.exit()\r\n            elif event.type == pygame.KEYDOWN or event.type == pygame.MOUSEBUTTONDOWN:\r\n                return\r\n        pygame.display.flip()\r\n        clock.tick(60)\r\n\r\n\r\ninventory = {\r\n    \"fire_cristal\": 10,\r\n    \"el_cristal\": 2,\r\n    \"healme5\": 3,\r\n    \"wearpon\": 20,\r\n    \"rupis\": 20,\r\n}\r\n\r\n\r\ndef start_or_over_screen():\r\n    global flag_is_dying, screen\r\n    if flag_is_dying:\r\n        screen.blit(\r\n            scale(load(\"datafiles/game_over.png\"), (1280, 720)),\r\n            (0, 0),\r\n        )\r\n    else:\r\n        screen.blit(scale((load(\"datafiles/start_game.png\")), (1280, 720)), (0, 0))\r\n    pl.rect.x = 10\r\n    pl.rect.y = 510\r\n    pl.hp = 100\r\n    flag_is_dying = False\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                pygame.quit()\r\n                sys.exit()\r\n            elif event.type == pygame.KEYDOWN or event.type == pygame.MOUSEBUTTONDOWN:\r\n                return\r\n        pygame.display.flip()\r\n        clock.tick(60)\r\n\r\n\r\nflag_is_dying = False\r\nflag_is_dying_enemy = False\r\nwhile True:\r\n    if maps == \"map0\":\r\n        fand_torg = False\r\n        otr = False\r\n        clock = pygame.time.Clock()\r\n        size = height, width = 1280, 720\r\n        screen = pygame.display.set_mode(size)\r\n        eff_sprites = pygame.sprite.Group()\r\n        player_sprites = pygame.sprite.Group()\r\n        see_sprites = pygame.sprite.Group()\r\n        evil_sprites = pygame.sprite.Group()\r\n        pl = Player(pygame.image.load(\"datafiles/anim.png\"), 5, 1, 10, 500)\r\n        running = True\r\n        attack = [False, 0]\r\n        attack_cr = [False, 0]\r\n        gui = gui()\r\n        Torg = torg()\r\n        torg_in_map = True\r\n        gui_t = gui_torg()\r\n        sound_hod = pygame.mixer.Sound(\"datafiles/soundh.mp3\")\r\n        fire_son = pygame.mixer.Sound(\"datafiles/fire_son.mp3\")\r\n        mous = None\r\n    elif maps == \"map1\":\r\n        try:\r\n            fand_torg = False\r\n            otr = False\r\n            clock = pygame.time.Clock()\r\n            size = height, width = 1280, 720\r\n            screen = pygame.display.set_mode(size)\r\n            eff_sprites = pygame.sprite.Group()\r\n            player_sprites = pygame.sprite.Group()\r\n            see_sprites = pygame.sprite.Group()\r\n            evil_sprites = pygame.sprite.Group()\r\n            pl = Player(pygame.image.load(\"datafiles/anim.png\"), 5, 1, 10, 500)\r\n            running = True\r\n            attack = [False, 0]\r\n            attack_cr = [False, 0]\r\n            Torg = torg()\r\n            torg_in_map = False\r\n            gui_t = gui_torg()\r\n            sound_hod = pygame.mixer.Sound(\"datafiles/soundh.mp3\")\r\n            fire_son = pygame.mixer.Sound(\"datafiles/fire_son.mp3\")\r\n            mous = None\r\n            Evil(player_sprites, 10, 500, pygame.image.load(\"datafiles/evil1.png\"), 30)\r\n            Evil(player_sprites, 40, 500, pygame.image.load(\"datafiles/evil1.png\"), 30)\r\n            Evil(player_sprites, 30, 500, pygame.image.load(\"datafiles/evil1.png\"), 30)\r\n            Evil(player_sprites, 20, 500, pygame.image.load(\"datafiles/evil1.png\"), 30)\r\n            gui = gui()\r\n        except TypeError:\r\n            print(\"reset\")\r\n    start_or_over_screen()\r\n    while running:\r\n        try:\r\n            sound_sword = pygame.mixer.Sound(\"datafiles/sound_fite.mp3\")\r\n            for event in pygame.event.get():\r\n                if event.type == pygame.QUIT:\r\n                    running = False\r\n                if event.type == pygame.MOUSEBUTTONDOWN:\r\n                    if pl.cur_frame >= 2:\r\n                        pl.cur_frame = 0\r\n                    attack = [True, 0]\r\n                    sound_sword.play()\r\n                    print(\"attack\")\r\n                    pl.update_attack()\r\n                    for i in evil_sprites:\r\n                        if abs(i.rect.x - pl.rect.x) <= 60:\r\n                            i.hp -= 5\r\n                if event.type == pygame.KEYDOWN:\r\n                    if event.key == pygame.K_1:\r\n                        if inventory[\"fire_cristal\"] != 0:\r\n                            inventory[\"fire_cristal\"] -= 1\r\n                            enger_spire(\r\n                                pygame.image.load(\"datafiles/anim_fire.png\"),\r\n                                3,\r\n                                1,\r\n                                pl.rect.x - 20,\r\n                                pl.rect.y - 10,\r\n                            )\r\n                            attack_cr = [True, 0]\r\n                            fire_son.play()\r\n                    if event.key == pygame.K_3:\r\n                        if inventory[\"healme5\"] > 0:\r\n                            pl.hp += 5\r\n                            inventory[\"healme5\"] -= 1\r\n                    if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT:\r\n                        sound_hod.play(-1)\r\n                if event.type == pygame.KEYUP:\r\n                    if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT:\r\n                        sound_hod.stop()\r\n            key = pygame.key.get_pressed()\r\n            if key[pygame.K_RIGHT]:\r\n                pl.update_hod(\"r\")\r\n                otr = False\r\n            if key[pygame.K_LEFT]:\r\n                pl.update_hod(\"l\")\r\n                otr = True\r\n            if attack[0] and attack[1] <= 2:\r\n                pl.update_attack()\r\n                attack[1] += 1\r\n            else:\r\n                attack = [False, 0]\r\n            screen.blit(pygame.image.load(\"datafiles/map1.png\"), (0, 0))\r\n            if attack_cr[0] and attack_cr[1] <= 10:\r\n                eff_sprites.update()\r\n                eff_sprites.draw(screen)\r\n                attack_cr[1] += 1\r\n            else:\r\n                eff_sprites.empty()\r\n                fire_son.stop()\r\n                attack_cr[0] = False\r\n                attack_cr[1] = 0\r\n            if eff_sprites:\r\n                for i in eff_sprites:\r\n                    if evil_sprites:\r\n                        for j in evil_sprites:\r\n                            if abs(i.rect.x - j.rect.x) <= 50:\r\n                                j.poison += 1\r\n            if flag_is_dying:\r\n                start_or_over_screen()\r\n            evil_sprites.draw(screen)\r\n            evil_sprites.update()\r\n            player_sprites.draw(screen)\r\n            gui.update()\r\n            if torg_in_map:\r\n                Torg.update()\r\n            if fand_torg:\r\n                gui_t.update()\r\n            if pl.rect.x > 1280:\r\n                maps = \"map1\"\r\n                break\r\n            pygame.display.flip()\r\n            clock.tick(10)\r\n        except IndexError:\r\n            pl.cur_frame = 0\r\n            print(\"Ошибка анимации\")\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/run.py b/run.py
--- a/run.py	
+++ b/run.py	
@@ -1,4 +1,3 @@
-import random
 import random
 import sys
 from pygame.transform import scale
@@ -9,7 +8,7 @@
 gui_torg = False
 
 
-class gui_torg(pygame.sprite.Sprite):
+class Gui_torg(pygame.sprite.Sprite):
     def __init__(self):
         super().__init__()
         self.gui_sell = pygame.image.load("datafiles/sell.png")
@@ -39,7 +38,7 @@
                 print("Нема деняг")
 
 
-class torg(pygame.sprite.Sprite):
+class Torg(pygame.sprite.Sprite):
     def __init__(self):
         super().__init__(see_sprites)
         self.image = pygame.image.load("datafiles/torg.png")
@@ -73,6 +72,7 @@
         screen.blit(self.rup, (100, 20))
         self.summ = str(inventory["rupis"])
         self.rup = self.font.render(self.summ, True, (20, 255, 20))
+        screen.blit(load('da'))
         self.text_surface = self.text_surface = self.font.render(
             str(pl.hp), True, (255, 255, 255)
         )
@@ -112,7 +112,7 @@
                 self.hp -= self.poison
         else:
             if not flag_is_dying_enemy:
-                self.image = load('datafiles/evil_death.png')
+                self.image = load("datafiles/evil_death.png")
                 self.rect.y += 45
                 flag_is_dying_enemy = True
         if not self.give_money:
@@ -266,54 +266,35 @@
 
 flag_is_dying = False
 flag_is_dying_enemy = False
-while True:
-    if maps == "map0":
-        fand_torg = False
-        otr = False
-        clock = pygame.time.Clock()
-        size = height, width = 1280, 720
-        screen = pygame.display.set_mode(size)
-        eff_sprites = pygame.sprite.Group()
-        player_sprites = pygame.sprite.Group()
-        see_sprites = pygame.sprite.Group()
-        evil_sprites = pygame.sprite.Group()
-        pl = Player(pygame.image.load("datafiles/anim.png"), 5, 1, 10, 500)
-        running = True
-        attack = [False, 0]
-        attack_cr = [False, 0]
-        gui = gui()
-        Torg = torg()
-        torg_in_map = True
-        gui_t = gui_torg()
-        sound_hod = pygame.mixer.Sound("datafiles/soundh.mp3")
-        fire_son = pygame.mixer.Sound("datafiles/fire_son.mp3")
-        mous = None
-    elif maps == "map1":
-        try:
-            fand_torg = False
-            otr = False
-            clock = pygame.time.Clock()
-            size = height, width = 1280, 720
-            screen = pygame.display.set_mode(size)
-            eff_sprites = pygame.sprite.Group()
-            player_sprites = pygame.sprite.Group()
-            see_sprites = pygame.sprite.Group()
-            evil_sprites = pygame.sprite.Group()
-            pl = Player(pygame.image.load("datafiles/anim.png"), 5, 1, 10, 500)
-            running = True
-            attack = [False, 0]
-            attack_cr = [False, 0]
-            Torg = torg()
+clock = pygame.time.Clock()
+size = height, width = 1280, 720
+screen = pygame.display.set_mode(size)
+eff_sprites = pygame.sprite.Group()
+player_sprites = pygame.sprite.Group()
+see_sprites = pygame.sprite.Group()
+evil_sprites = pygame.sprite.Group()
+running = True
+attack = [False, 0]
+attack_cr = [False, 0]
+sound_hod = pygame.mixer.Sound("datafiles/soundh.mp3")
+fire_son = pygame.mixer.Sound("datafiles/fire_son.mp3")
+gui_t = Gui_torg()
+gui = gui()
+torg = Torg()
+mous = None
+pl = Player(pygame.image.load("datafiles/anim.png"), 5, 1, 10, 500)
+fand_torg = False
+otr = False
+while True:
+    if maps == "map0":
+        torg_in_map = True
+    elif maps == "map1":
+        try:
             torg_in_map = False
-            gui_t = gui_torg()
-            sound_hod = pygame.mixer.Sound("datafiles/soundh.mp3")
-            fire_son = pygame.mixer.Sound("datafiles/fire_son.mp3")
-            mous = None
             Evil(player_sprites, 10, 500, pygame.image.load("datafiles/evil1.png"), 30)
             Evil(player_sprites, 40, 500, pygame.image.load("datafiles/evil1.png"), 30)
             Evil(player_sprites, 30, 500, pygame.image.load("datafiles/evil1.png"), 30)
             Evil(player_sprites, 20, 500, pygame.image.load("datafiles/evil1.png"), 30)
-            gui = gui()
         except TypeError:
             print("reset")
     start_or_over_screen()
@@ -346,20 +327,21 @@
                             )
                             attack_cr = [True, 0]
                             fire_son.play()
+
                     if event.key == pygame.K_3:
                         if inventory["healme5"] > 0:
                             pl.hp += 5
                             inventory["healme5"] -= 1
-                    if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT:
+                    if event.key == pygame.K_a or event.key == pygame.K_d:
                         sound_hod.play(-1)
                 if event.type == pygame.KEYUP:
-                    if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT:
+                    if event.key == pygame.K_a or event.key == pygame.K_d:
                         sound_hod.stop()
             key = pygame.key.get_pressed()
-            if key[pygame.K_RIGHT]:
+            if key[pygame.K_d]:
                 pl.update_hod("r")
                 otr = False
-            if key[pygame.K_LEFT]:
+            if key[pygame.K_a]:
                 pl.update_hod("l")
                 otr = True
             if attack[0] and attack[1] <= 2:
@@ -390,11 +372,14 @@
             player_sprites.draw(screen)
             gui.update()
             if torg_in_map:
-                Torg.update()
+                torg.update()
             if fand_torg:
                 gui_t.update()
             if pl.rect.x > 1280:
-                maps = "map1"
+                if maps == "map0":
+                    maps = "map1"
+                else:
+                    maps = "map0"
                 break
             pygame.display.flip()
             clock.tick(10)
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"c959917f-fa6a-4304-be9e-3a2817d2f875\" name=\"Changes\" comment=\"ff\">\r\n      <change beforePath=\"$PROJECT_DIR$/run.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/run.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PUSH_AUTO_UPDATE\" value=\"true\" />\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2aixFhn2UTvBiXArfdKjlC2PCna\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <OptionsSetting value=\"false\" id=\"Update\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Python.run.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;ANIMIXOM&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Games/pygameLC&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Games\\pygameLC\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"run\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"pygameLC\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"C:\\Users\\yakus\\AppData\\Local\\Programs\\Python\\Python38-32\\python.exe\" />\r\n      <option name=\"SDK_NAME\" value=\"Python 3.8\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/run.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.run\" />\r\n        <item itemvalue=\"Python.run\" />\r\n        <item itemvalue=\"Python.run\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-67fca87a943a-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.11799.259\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"c959917f-fa6a-4304-be9e-3a2817d2f875\" name=\"Changes\" comment=\"\" />\r\n      <created>1704815098765</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1704815098765</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"By Animixom 12.01.24 - чист оснонвание\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1705082113750</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1705082113750</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"by ANIMIXOM - торговец\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1705679612426</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1705679612426</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"by ANIMIXOM - торговец\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1705679617485</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1705679617485</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"by ANIMIXOM - торговец\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1705680620300</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1705680620300</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"by ANIMIXOM - торговец + карта\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1705681598764</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1705681598764</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"ff\">\r\n      <created>1705684982362</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1705684982362</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"7\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"master\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_FILTERS\">\r\n      <map>\r\n        <entry key=\"Branch\">\r\n          <value>\r\n            <list>\r\n              <RecentGroup>\r\n                <option name=\"FILTER_VALUES\">\r\n                  <option value=\"ANIMIXOM/ANIMIXOM\" />\r\n                </option>\r\n              </RecentGroup>\r\n            </list>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"By Animixom 12.01.24 - чист оснонвание\" />\r\n    <MESSAGE value=\"by ANIMIXOM - торговец\" />\r\n    <MESSAGE value=\"by ANIMIXOM - торговец + карта\" />\r\n    <MESSAGE value=\"ff\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"ff\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/run.py</url>\r\n          <option name=\"timeStamp\" value=\"75\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n    <watches-manager>\r\n      <configuration name=\"PythonConfigurationType\">\r\n        <watch expression=\"cur_list\" />\r\n      </configuration>\r\n    </watches-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -4,7 +4,16 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="c959917f-fa6a-4304-be9e-3a2817d2f875" name="Changes" comment="ff">
+    <list default="true" id="c959917f-fa6a-4304-be9e-3a2817d2f875" name="Changes" comment="pep8">
+      <change afterPath="$PROJECT_DIR$/datafiles/coin.png" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_18_01_2024_18_35__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_18_01_2024_18_35__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_01_2024_17_07__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_01_2024_17_07__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_01_2024_17_20__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_01_2024_17_20__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_01_2024_17_21__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_01_2024_17_21__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_01_2024_17_26__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_01_2024_17_26__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_18_01_2024_18_33__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_18_01_2024_18_33__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_19_01_2024_17_18__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_19_01_2024_17_18__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/run.py" beforeDir="false" afterPath="$PROJECT_DIR$/run.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -23,11 +32,14 @@
     <option name="PUSH_AUTO_UPDATE" value="true" />
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="master" />
+        <entry key="$PROJECT_DIR$" value="ANIMIXOM" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
+  <component name="HighlightingSettingsPerFile">
+    <setting file="file://$PROJECT_DIR$/run.py" root0="FORCE_HIGHLIGHTING" />
+  </component>
   <component name="ProjectColorInfo">{
   &quot;associatedIndex&quot;: 1
 }</component>
@@ -51,6 +63,9 @@
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="C:\Games\pygameLC" />
+    </key>
+    <key name="MoveFile.RECENT_KEYS">
+      <recent name="C:\Users\yakus\pygameProjects\datafiles" />
     </key>
   </component>
   <component name="RunManager">
