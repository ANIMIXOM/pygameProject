Index: run.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import random\r\nimport sys\r\nfrom pygame.transform import scale\r\nimport pygame\r\nfrom pygame.image import load\r\n\r\npygame.init()\r\ngui_torg = False\r\n\r\n\r\nclass Gui_torg(pygame.sprite.Sprite):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.gui_sell = pygame.image.load(\"datafiles/sell.png\")\r\n        self.rect_sell = self.gui_sell.get_rect()\r\n        self.gui_buy_fire = pygame.image.load(\"datafiles/fire_buy.png\")\r\n        self.gui_buy_el = pygame.image.load(\"datafiles/el_buy.png\")\r\n        self.sound = pygame.mixer.Sound(\"datafiles/torg.mp3\")\r\n\r\n    def update(self):\r\n        screen.blit(self.gui_buy_el, (400, 200))\r\n        screen.blit(self.gui_buy_fire, (100, 200))\r\n        screen.blit(self.gui_sell, (250, 200))\r\n        key = pygame.key.get_pressed()\r\n        if key[pygame.K_s]:\r\n            if inventory[\"loot\"] > 0:\r\n                inventory[\"loot\"] -= 1\r\n                inventory[\"rupis\"] += 1\r\n                self.sound.play(1)\r\n            else:\r\n                print(\"У вас нету товара\")\r\n        if key[pygame.K_f]:\r\n            if inventory[\"rupis\"] >= 3:\r\n                inventory[\"rupis\"] -= 3\r\n                inventory[\"fire_cristal\"] += 1\r\n                self.sound.play(1)\r\n            else:\r\n                print(\"Нема деняг\")\r\n        if key[pygame.K_h]:\r\n            if inventory[\"rupis\"] >= 1:\r\n                inventory[\"rupis\"] -= 1\r\n                inventory[\"healme5\"] += 1\r\n                self.sound.play(1)\r\n            else:\r\n                print(\"Нема деняг\")\r\n\r\n\r\nclass Torg(pygame.sprite.Sprite):\r\n    def __init__(self):\r\n        super().__init__(see_sprites)\r\n        self.image = pygame.image.load(\"datafiles/torg.png\")\r\n        self.rect = self.image.get_rect()\r\n        self.rect.x = 500\r\n        self.rect.y = 300\r\n\r\n    def update(self):\r\n        if pygame.sprite.spritecollide(self, player_sprites, dokill=False):\r\n            global fand_torg\r\n            fand_torg = True\r\n            pl.rect.x += 200\r\n        screen.blit(self.image, (700, 280))\r\n\r\n\r\nmaps = \"map0\"\r\n\r\n\r\nclass Gui:\r\n    def __init__(self):\r\n        global inventory\r\n        self.font = pygame.font.Font(\"datafiles/Lightman.ttf\", 20)\r\n        self.hearts = self.font.render(\"99\", True, (255, 255, 255))\r\n        self.healim = pygame.image.load(\"datafiles/health.png\")\r\n        self.healim = pygame.transform.scale(self.healim, (50, 50))\r\n        self.summ = str(inventory[\"rupis\"])\r\n        self.rup = self.font.render(self.summ, True, (20, 255, 20))\r\n        self.loot = self.font.render(str(inventory[\"loot\"]), True, (20, 255, 20))\r\n\r\n    def update(self):\r\n        screen.blit(self.healim, (25, 10))\r\n        screen.blit(scale(load(\"datafiles/coin.png\"), (50, 50)), (94, 7))\r\n        screen.blit(scale(load(\"datafiles/inventory.png\"), (50, 50)), (163, 7))\r\n        screen.blit(self.hearts, (20, 20))\r\n        screen.blit(self.rup, (100, 20))\r\n        screen.blit(self.loot, (180, 20))\r\n        self.loot = self.font.render(str(inventory[\"loot\"]), True, (20, 255, 20))\r\n        self.summ = str(inventory[\"rupis\"])\r\n        self.rup = self.font.render(self.summ, True, (20, 255, 20))\r\n        self.hearts = self.hearts = self.font.render(str(pl.hp), True, (255, 255, 255))\r\n\r\n\r\nclass Evil(pygame.sprite.Sprite):\r\n    def __init__(self, player_sprites, x, y, image, hp):\r\n        super().__init__(evil_sprites)\r\n        self.poison = 0\r\n        self.hp = int(hp)\r\n        self.image = image\r\n        self.rect = self.image.get_rect()\r\n        self.rect.x = x\r\n        self.rect.y = y\r\n        self.player_sprites = player_sprites\r\n\r\n    def update(self):\r\n        global flag_is_dying, flag_is_dying_enemy, evils, count\r\n        if self.hp > 0:\r\n            player = self.player_sprites.sprites()[0]\r\n            distance = abs(pl.rect.x - self.rect.x)\r\n            if self.hp >= 0:\r\n                # Проверяем дистанцию между игроком и врагом\r\n                if distance < 200:\r\n                    # Идем на игрока\r\n                    if pl.rect.x - self.rect.x > 0:\r\n                        self.rect.x += 8\r\n                    else:\r\n                        self.rect.x -= 8\r\n\r\n                # Проверяем столкновение с игроком\r\n                if pygame.sprite.spritecollide(self, self.player_sprites, False):\r\n                    pl.hp -= 1\r\n                if pl.hp == 0:\r\n                    flag_is_dying = True\r\n                self.hp -= self.poison\r\n        else:\r\n            for i in evils:\r\n                if evils[i] != 0 and i.hp == 0:\r\n                    i.image = load(\"datafiles/evil_death.png\")\r\n                    i.rect.y += 45\r\n                    inventory[\"loot\"] += random.randint(1, 3)\r\n                    evils[i] = 0\r\n            if not flag_is_dying_enemy:\r\n                for i in evils:\r\n                    if evils[i] == 0:\r\n                        i.rect.y += 10\r\n\r\n            if all(evils[j] == 0 for j in evils) and count == 2:\r\n                flag_is_dying_enemy = True\r\n            else:\r\n                count += 1\r\n\r\n\r\nclass enger_spire(pygame.sprite.Sprite):\r\n    def __init__(self, sheet, columns, rows, x, y):\r\n        super().__init__(eff_sprites)\r\n        self.frames = []\r\n        self.cut_sheet(sheet, columns, rows)\r\n        self.cur_frames = 0\r\n        self.image = self.frames[self.cur_frames]\r\n        self.rect = self.rect.move(x, y)\r\n\r\n    def cut_sheet(self, sheet, columns, rows):\r\n        self.rect = pygame.Rect(\r\n            0, 0, sheet.get_width() // columns, sheet.get_height() // rows\r\n        )\r\n        for j in range(rows):\r\n            for i in range(columns):\r\n                frame_location = (self.rect.w * i, self.rect.h * j)\r\n                self.frames.append(\r\n                    sheet.subsurface(pygame.Rect(frame_location, self.rect.size))\r\n                )\r\n\r\n    def update(self):\r\n        self.cur_frames += 1\r\n        self.image = self.frames[self.cur_frames]\r\n        if self.cur_frames >= 2:\r\n            self.cur_frames = 0\r\n\r\n\r\nclass Player(pygame.sprite.Sprite):\r\n    def __init__(self, sheet, columns, rows, x, y):\r\n        super().__init__(player_sprites)\r\n        self.hp = 100\r\n        self.frames_hod = []\r\n        self.frames_at = []\r\n        self.cut_sheet_hod(sheet, columns, rows)\r\n        self.cut_sheet_attack(pygame.image.load(\"datafiles/anim_at.png\"), 3, 1)\r\n        self.cur_frame = 0\r\n        self.image = self.frames_hod[self.cur_frame]\r\n        self.rect = self.rect.move(x, y)\r\n\r\n    def cut_sheet_hod(self, sheet, columns, rows):\r\n        self.rect = pygame.Rect(\r\n            0, 0, sheet.get_width() // columns, sheet.get_height() // rows\r\n        )\r\n        for j in range(rows):\r\n            for i in range(columns):\r\n                frame_location = (self.rect.w * i, self.rect.h * j)\r\n                self.frames_hod.append(\r\n                    sheet.subsurface(pygame.Rect(frame_location, self.rect.size))\r\n                )\r\n\r\n    def cut_sheet_attack(self, sheet, columns, rows):\r\n        self.rect = pygame.Rect(\r\n            0, 0, sheet.get_width() // columns, sheet.get_height() // rows\r\n        )\r\n        for j in range(rows):\r\n            for i in range(columns):\r\n                frame_location = (self.rect.w * i, self.rect.h * j)\r\n                self.frames_at.append(\r\n                    sheet.subsurface(pygame.Rect(frame_location, self.rect.size))\r\n                )\r\n\r\n    def update_hod(self, n):\r\n        self.cur_frame = self.cur_frame + 1\r\n        if n == \"r\":\r\n            self.rect.x += 30\r\n            self.image = self.frames_hod[self.cur_frame]\r\n        else:\r\n            self.rect.x -= 30\r\n            images = self.frames_hod[self.cur_frame]\r\n            images = pygame.transform.flip(images, True, False)\r\n            self.image = images\r\n\r\n        if self.cur_frame == 4:\r\n            self.cur_frame = 1\r\n\r\n    def update_attack(self):\r\n        self.cur_frame = self.cur_frame + 1\r\n        if not otr:\r\n            self.image = self.frames_at[self.cur_frame]\r\n        else:\r\n            images = self.frames_at[self.cur_frame]\r\n            images = pygame.transform.flip(images, True, False)\r\n            self.image = images\r\n        if self.cur_frame == 2:\r\n            self.cur_frame = 0\r\n\r\n\r\ndef start_or_over_screen():\r\n    global flag_is_dying\r\n    if flag_is_dying:\r\n        screen.blit(\r\n            scale(load(\"datafiles/game_over.png\"), (1280, 720)),\r\n            (0, 0),\r\n        )\r\n    else:\r\n        screen.blit(scale((load(\"datafiles/start_game.png\")), (1280, 720)), (0, 0))\r\n    pl.rect.x = 10\r\n    pl.rect.y = 510\r\n    pl.hp = 100\r\n    flag_is_dying = False\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                pygame.quit()\r\n                sys.exit()\r\n            elif event.type == pygame.KEYDOWN or event.type == pygame.MOUSEBUTTONDOWN:\r\n                return\r\n        pygame.display.flip()\r\n        clock.tick(60)\r\n\r\n\r\ninventory = {\r\n    \"fire_cristal\": 10,\r\n    \"el_cristal\": 2,\r\n    \"healme5\": 3,\r\n    \"loot\": 0,\r\n    \"rupis\": 20,\r\n}\r\nflag_is_dying = False\r\nflag_is_dying_enemy = False\r\nclock = pygame.time.Clock()\r\nsize = height, width = 1280, 720\r\nscreen = pygame.display.set_mode(size)\r\neff_sprites = pygame.sprite.Group()\r\nplayer_sprites = pygame.sprite.Group()\r\nsee_sprites = pygame.sprite.Group()\r\nevil_sprites = pygame.sprite.Group()\r\nrunning = True\r\nattack = [False, 0]\r\nattack_cr = [False, 0]\r\nsound_hod = pygame.mixer.Sound(\"datafiles/soundh.mp3\")\r\nfire_son = pygame.mixer.Sound(\"datafiles/fire_son.mp3\")\r\ngui_t = Gui_torg()\r\ngui = Gui()\r\ntorg = Torg()\r\nmous = None\r\npl = Player(pygame.image.load(\"datafiles/anim.png\"), 5, 1, 10, 500)\r\notr = False\r\nfand_torg = False\r\nwhile True:\r\n    if maps == \"map0\":\r\n        torg_in_map = True\r\n    elif maps == \"map1\":\r\n        try:\r\n            fand_torg = False\r\n            torg_in_map = False\r\n            evils = {}\r\n            x = 250\r\n            flag_is_dying_enemy = False\r\n            count = 0\r\n            for i in range(4):\r\n                evils[\r\n                    Evil(\r\n                        player_sprites,\r\n                        x,\r\n                        500,\r\n                        pygame.image.load(\"datafiles/evil1.png\"),\r\n                        30,\r\n                    )\r\n                ] = 1\r\n                x += 150\r\n        except TypeError:\r\n            print(\"reset\")\r\n    start_or_over_screen()\r\n    while running:\r\n        try:\r\n            sound_sword = pygame.mixer.Sound(\"datafiles/sound_fite.mp3\")\r\n            for event in pygame.event.get():\r\n                if event.type == pygame.QUIT:\r\n                    running = False\r\n                if event.type == pygame.MOUSEBUTTONDOWN:\r\n                    if pl.cur_frame >= 2:\r\n                        pl.cur_frame = 0\r\n                    attack = [True, 0]\r\n                    sound_sword.play()\r\n                    print(\"attack\")\r\n                    pl.update_attack()\r\n                    for i in evil_sprites:\r\n                        if abs(i.rect.x - pl.rect.x) <= 60:\r\n                            i.hp -= 5\r\n                if event.type == pygame.KEYDOWN:\r\n                    if event.key == pygame.K_1:\r\n                        if inventory[\"fire_cristal\"] != 0:\r\n                            inventory[\"fire_cristal\"] -= 1\r\n                            enger_spire(\r\n                                pygame.image.load(\"datafiles/anim_fire.png\"),\r\n                                3,\r\n                                1,\r\n                                pl.rect.x - 20,\r\n                                pl.rect.y - 10,\r\n                            )\r\n                            attack_cr = [True, 0]\r\n                            fire_son.play()\r\n\r\n                    if event.key == pygame.K_e:\r\n                        if inventory[\"healme5\"] > 0:\r\n                            pl.hp += 5\r\n                            inventory[\"healme5\"] -= 1\r\n                    if event.key == pygame.K_a or event.key == pygame.K_d:\r\n                        sound_hod.play(-1)\r\n                if event.type == pygame.KEYUP:\r\n                    if event.key == pygame.K_a or event.key == pygame.K_d:\r\n                        sound_hod.stop()\r\n            key = pygame.key.get_pressed()\r\n            if key[pygame.K_d]:\r\n                pl.update_hod(\"r\")\r\n                otr = False\r\n            if key[pygame.K_a]:\r\n                pl.update_hod(\"l\")\r\n                otr = True\r\n            if attack[0] and attack[1] <= 2:\r\n                pl.update_attack()\r\n                attack[1] += 1\r\n            else:\r\n                attack = [False, 0]\r\n            screen.blit(pygame.image.load(\"datafiles/map1.png\"), (0, 0))\r\n            if attack_cr[0] and attack_cr[1] <= 10:\r\n                eff_sprites.update()\r\n                eff_sprites.draw(screen)\r\n                attack_cr[1] += 1\r\n            else:\r\n                eff_sprites.empty()\r\n                fire_son.stop()\r\n                attack_cr[0] = False\r\n                attack_cr[1] = 0\r\n            if eff_sprites:\r\n                for i in eff_sprites:\r\n                    if evil_sprites:\r\n                        for j in evil_sprites:\r\n                            if abs(i.rect.x - j.rect.x) <= 50:\r\n                                j.poison += 1\r\n            if flag_is_dying:\r\n                start_or_over_screen()\r\n            evil_sprites.draw(screen)\r\n            evil_sprites.update()\r\n            gui.update()\r\n            if torg_in_map:\r\n                torg.update()\r\n            if fand_torg:\r\n                gui_t.update()\r\n            player_sprites.draw(screen)\r\n            if pl.rect.x > 1280:\r\n                if maps == \"map0\":\r\n                    maps = \"map1\"\r\n                else:\r\n                    maps = \"map0\"\r\n                break\r\n            pygame.display.flip()\r\n            clock.tick(10)\r\n        except IndexError:\r\n            pl.cur_frame = 0\r\n            print(\"Ошибка анимации\")\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/run.py b/run.py
--- a/run.py	(revision ea43d65c99678ce77243d082509716bf94dc6d10)
+++ b/run.py	(date 1705745426905)
@@ -1,5 +1,7 @@
 import random
 import sys
+import time
+
 from pygame.transform import scale
 import pygame
 from pygame.image import load
@@ -18,6 +20,7 @@
         self.sound = pygame.mixer.Sound("datafiles/torg.mp3")
 
     def update(self):
+        global max_coins
         screen.blit(self.gui_buy_el, (400, 200))
         screen.blit(self.gui_buy_fire, (100, 200))
         screen.blit(self.gui_sell, (250, 200))
@@ -26,6 +29,7 @@
             if inventory["loot"] > 0:
                 inventory["loot"] -= 1
                 inventory["rupis"] += 1
+                max_coins += 1
                 self.sound.play(1)
             else:
                 print("У вас нету товара")
@@ -74,33 +78,50 @@
         self.summ = str(inventory["rupis"])
         self.rup = self.font.render(self.summ, True, (20, 255, 20))
         self.loot = self.font.render(str(inventory["loot"]), True, (20, 255, 20))
+        self.potion_hp = self.font.render(
+            str(inventory["healme5"]), True, (20, 255, 20)
+        )
+        self.fire_mag = self.font.render(
+            str(inventory["fire_cristal"]), True, (20, 255, 20)
+        )
 
     def update(self):
         screen.blit(self.healim, (25, 10))
         screen.blit(scale(load("datafiles/coin.png"), (50, 50)), (94, 7))
         screen.blit(scale(load("datafiles/inventory.png"), (50, 50)), (163, 7))
+        screen.blit(scale(load("datafiles/potion_hp.png"), (50, 70)), (25, 70))
+        screen.blit(scale(load("datafiles/fire_mag.png"), (50, 55)), (35, 140))
         screen.blit(self.hearts, (20, 20))
         screen.blit(self.rup, (100, 20))
         screen.blit(self.loot, (180, 20))
+        screen.blit(self.potion_hp, (5, 85))
+        screen.blit(self.fire_mag, (5, 160))
         self.loot = self.font.render(str(inventory["loot"]), True, (20, 255, 20))
         self.summ = str(inventory["rupis"])
         self.rup = self.font.render(self.summ, True, (20, 255, 20))
         self.hearts = self.hearts = self.font.render(str(pl.hp), True, (255, 255, 255))
+        self.potion_hp = self.font.render(
+            str(inventory["healme5"]), True, (20, 255, 20)
+        )
+        self.fire_mag = self.font.render(
+            str(inventory["fire_cristal"]), True, (20, 255, 20)
+        )
 
 
 class Evil(pygame.sprite.Sprite):
-    def __init__(self, player_sprites, x, y, image, hp):
+    def __init__(self, player_sprites, x, y, image, hp, typep):
         super().__init__(evil_sprites)
         self.poison = 0
         self.hp = int(hp)
         self.image = image
+        self.type = typep
         self.rect = self.image.get_rect()
         self.rect.x = x
         self.rect.y = y
         self.player_sprites = player_sprites
 
     def update(self):
-        global flag_is_dying, flag_is_dying_enemy, evils, count
+        global flag_is_dying, flag_is_dying_enemy, evils, count, deaths, col_killed_enem, max_col_loots
         if self.hp > 0:
             player = self.player_sprites.sprites()[0]
             distance = abs(pl.rect.x - self.rect.x)
@@ -118,23 +139,33 @@
                     pl.hp -= 1
                 if pl.hp == 0:
                     flag_is_dying = True
-                self.hp -= self.poison
-        else:
-            for i in evils:
-                if evils[i] != 0 and i.hp == 0:
+                    deaths += 1
+
+        for i in evils:
+            if pygame.sprite.spritecollide(i, eff_sprites, False):
+                i.hp -= self.poison
+            if evils[i] != 0 and i.hp <= 0:
+                if i.type == "normal":
                     i.image = load("datafiles/evil_death.png")
                     i.rect.y += 45
-                    inventory["loot"] += random.randint(1, 3)
-                    evils[i] = 0
-            if not flag_is_dying_enemy:
-                for i in evils:
-                    if evils[i] == 0:
-                        i.rect.y += 10
+                    loot = random.randint(1, 3)
+                else:
+                    i.image = scale(load("datafiles/boss_death.png"), (135, 76))
+                    loot = random.randint(5, 15)
+
+                inventory["loot"] += loot
+                max_col_loots += loot
+                evils[i] = 0
+                col_killed_enem += 1
+        for i in evils:
+            if evils[i] == 0 and i.rect.y < 720:
+                i.rect.y += 10
 
-            if all(evils[j] == 0 for j in evils) and count == 2:
-                flag_is_dying_enemy = True
-            else:
-                count += 1
+        if all(evils[j] == 0 for j in evils) and count == 2:
+            flag_is_dying_enemy = True
+
+        else:
+            count += 1
 
 
 class enger_spire(pygame.sprite.Sprite):
@@ -223,6 +254,13 @@
         if self.cur_frame == 2:
             self.cur_frame = 0
 
+    def update(self):
+        global flag_jumping
+        if pl.rect.y < 510:
+            pl.rect.y += 10
+            if pl.rect.y == 510:
+                flag_jumping = True
+
 
 def start_or_over_screen():
     global flag_is_dying
@@ -231,11 +269,12 @@
             scale(load("datafiles/game_over.png"), (1280, 720)),
             (0, 0),
         )
+        pl.hp = 100
+
     else:
         screen.blit(scale((load("datafiles/start_game.png")), (1280, 720)), (0, 0))
     pl.rect.x = 10
     pl.rect.y = 510
-    pl.hp = 100
     flag_is_dying = False
     while True:
         for event in pygame.event.get():
@@ -248,6 +287,16 @@
         clock.tick(60)
 
 
+def write_res():
+    global deaths, time_max, max_coins, col_killed_enem, max_col_loots
+    with open("result_game.txt", "w", encoding="utf-8") as res:
+        res.write(f"Время в игре: {time_max} секунд.\n")
+        res.write(f"Колличество убитых врагов: {col_killed_enem}.\n")
+        res.write(f"Поллучено геля {max_col_loots} с убитых врагов.\n")
+        res.write(f"Всего собранно монет: {max_coins}.\n")
+        res.write(f"Персоонаж умер {deaths} раз.")
+
+
 inventory = {
     "fire_cristal": 10,
     "el_cristal": 2,
@@ -255,6 +304,11 @@
     "loot": 0,
     "rupis": 20,
 }
+col_killed_enem = 0
+max_col_loots = 0
+max_coins = 20
+time_max = 0
+deaths = 0
 flag_is_dying = False
 flag_is_dying_enemy = False
 clock = pygame.time.Clock()
@@ -276,10 +330,20 @@
 pl = Player(pygame.image.load("datafiles/anim.png"), 5, 1, 10, 500)
 otr = False
 fand_torg = False
-while True:
+play = True
+lvls = 0
+flag_jumping = True
+enemy_ph = 30
+boss_hp = 120
+evils = {}
+while play:
+    time.sleep(1)
+    time_max += 1
     if maps == "map0":
-        torg_in_map = True
-    elif maps == "map1":
+        if evils == {} or all(evils[j] == 0 for j in evils):
+            torg_in_map = True
+
+    elif maps == "map1" and (evils == {} or all(evils[j] == 0 for j in evils)):
         try:
             fand_torg = False
             torg_in_map = False
@@ -292,12 +356,28 @@
                     Evil(
                         player_sprites,
                         x,
-                        500,
+                        510,
                         pygame.image.load("datafiles/evil1.png"),
-                        30,
+                        enemy_ph,
+                        "normal",
                     )
                 ] = 1
                 x += 150
+            lvls += 1
+            if lvls % 5 == 1:
+                evils[
+                    Evil(
+                        player_sprites,
+                        x,
+                        390,
+                        scale(pygame.image.load("datafiles/boss.png"), (180, 180)),
+                        boss_hp,
+                        "boss",
+                    )
+                ] = 1
+            enemy_ph += enemy_ph * 0.05
+            boss_hp += boss_hp * 0.05
+            print(enemy_ph, boss_hp)
         except TypeError:
             print("reset")
     start_or_over_screen()
@@ -314,44 +394,48 @@
                     sound_sword.play()
                     print("attack")
                     pl.update_attack()
-                    for i in evil_sprites:
-                        if abs(i.rect.x - pl.rect.x) <= 60:
-                            i.hp -= 5
-                if event.type == pygame.KEYDOWN:
-                    if event.key == pygame.K_1:
-                        if inventory["fire_cristal"] != 0:
-                            inventory["fire_cristal"] -= 1
-                            enger_spire(
-                                pygame.image.load("datafiles/anim_fire.png"),
-                                3,
-                                1,
-                                pl.rect.x - 20,
-                                pl.rect.y - 10,
-                            )
-                            attack_cr = [True, 0]
-                            fire_son.play()
-
-                    if event.key == pygame.K_e:
-                        if inventory["healme5"] > 0:
-                            pl.hp += 5
-                            inventory["healme5"] -= 1
-                    if event.key == pygame.K_a or event.key == pygame.K_d:
-                        sound_hod.play(-1)
-                if event.type == pygame.KEYUP:
-                    if event.key == pygame.K_a or event.key == pygame.K_d:
-                        sound_hod.stop()
-            key = pygame.key.get_pressed()
+                key = pygame.key.get_pressed()
+
+                if key[pygame.K_a] or key[pygame.K_d]:
+                    sound_hod.play(-1)
+                if event.type == pygame.KEYUP:
+                    if event.key == pygame.K_a or event.key == pygame.K_d:
+                        sound_hod.stop()
+            key = pygame.key.get_pressed()
+            for i in evil_sprites:
+                if abs(i.rect.x - pl.rect.x) <= 60:
+                    i.hp -= 5
+            if key[pygame.K_1]:
+                if inventory["fire_cristal"] != 0:
+                    inventory["fire_cristal"] -= 1
+                    enger_spire(
+                        pygame.image.load("datafiles/anim_fire.png"),
+                        3,
+                        1,
+                        pl.rect.x - 20,
+                        pl.rect.y - 10,
+                    )
+                    attack_cr = [True, 0]
+                    fire_son.play()
             if key[pygame.K_d]:
                 pl.update_hod("r")
                 otr = False
             if key[pygame.K_a]:
                 pl.update_hod("l")
                 otr = True
+            if key[pygame.K_SPACE] and flag_jumping:
+                pl.rect.y -= 70
+                flag_jumping = False
             if attack[0] and attack[1] <= 2:
                 pl.update_attack()
                 attack[1] += 1
             else:
                 attack = [False, 0]
+            if key[pygame.K_e]:
+                if inventory["healme5"] > 0:
+                    pl.hp += 5
+                    inventory["healme5"] -= 1
+
             screen.blit(pygame.image.load("datafiles/map1.png"), (0, 0))
             if attack_cr[0] and attack_cr[1] <= 10:
                 eff_sprites.update()
@@ -373,19 +457,21 @@
             evil_sprites.draw(screen)
             evil_sprites.update()
             gui.update()
+            pl.update()
             if torg_in_map:
                 torg.update()
             if fand_torg:
                 gui_t.update()
             player_sprites.draw(screen)
             if pl.rect.x > 1280:
-                if maps == "map0":
-                    maps = "map1"
-                else:
+                if maps == "map1":
                     maps = "map0"
+                else:
+                    maps = "map1"
                 break
             pygame.display.flip()
             clock.tick(10)
         except IndexError:
             pl.cur_frame = 0
             print("Ошибка анимации")
+write_res()
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"c959917f-fa6a-4304-be9e-3a2817d2f875\" name=\"Changes\" comment=\"pep8\">\r\n      <change afterPath=\"$PROJECT_DIR$/datafiles/coin.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/datafiles/el_buy.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/datafiles/evil_death.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/datafiles/fire_buy.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/datafiles/game_over.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/datafiles/inventory.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/datafiles/sell.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/datafiles/solution.7z\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/datafiles/sound_fite.mp3\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/datafiles/start_game.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/datafiles/torg.mp3\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/datafiles/torg.png\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/run.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/run.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"ANIMIXOM\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"8277e7e2-94bd-4a11-976a-709d11b6f849\" />\r\n        <option name=\"url\" value=\"https://github.com/ANIMIXOM/pygameProject\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/run.py\" root0=\"FORCE_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2aixFhn2UTvBiXArfdKjlC2PCna\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <OptionsSetting value=\"false\" id=\"Update\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Python.run.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/yakus/pygameProjects&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\yakus\\pygameProjects\" />\r\n      <recent name=\"C:\\Games\\pygameLC\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\yakus\\pygameProjects\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Python.run\">\r\n    <configuration name=\"run\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"pygameLC\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"C:\\Users\\yakus\\AppData\\Local\\Programs\\Python\\Python38-32\\python.exe\" />\r\n      <option name=\"SDK_NAME\" value=\"Python 3.8\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/run.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"test\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"pygameLC\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/test.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"test2\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"pygameLC\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/test2.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.run\" />\r\n        <item itemvalue=\"Python.test\" />\r\n        <item itemvalue=\"Python.test2\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-67fca87a943a-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.11799.259\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"c959917f-fa6a-4304-be9e-3a2817d2f875\" name=\"Changes\" comment=\"\" />\r\n      <created>1704815098765</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1704815098765</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"By Animixom 12.01.24 - чист оснонвание\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1705082113750</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1705082113750</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"++\">\r\n      <created>1705601176320</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1705601176320</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"сделал физику (она работает пока на моей карте)\">\r\n      <created>1705606700463</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1705606700463</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"master\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"By Animixom 12.01.24 - чист оснонвание\" />\r\n    <MESSAGE value=\"++\" />\r\n    <MESSAGE value=\"сделал физику (она работает пока на моей карте)\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"сделал физику (она работает пока на моей карте)\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/test.py</url>\r\n          <line>190</line>\r\n          <option name=\"timeStamp\" value=\"3\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n    <watches-manager>\r\n      <configuration name=\"PythonConfigurationType\">\r\n        <watch expression=\"cur_list\" />\r\n      </configuration>\r\n    </watches-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision ea43d65c99678ce77243d082509716bf94dc6d10)
+++ b/.idea/workspace.xml	(date 1705742035529)
@@ -4,21 +4,17 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="c959917f-fa6a-4304-be9e-3a2817d2f875" name="Changes" comment="pep8">
-      <change afterPath="$PROJECT_DIR$/datafiles/coin.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/datafiles/el_buy.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/datafiles/evil_death.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/datafiles/fire_buy.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/datafiles/game_over.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/datafiles/inventory.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/datafiles/sell.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/datafiles/solution.7z" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/datafiles/sound_fite.mp3" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/datafiles/start_game.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/datafiles/torg.mp3" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/datafiles/torg.png" afterDir="false" />
+    <list default="true" id="c959917f-fa6a-4304-be9e-3a2817d2f875" name="Changes" comment="добавил анимацию смерти врагамм и тд ...">
+      <change afterPath="$PROJECT_DIR$/datafiles/boss.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/datafiles/boss_death.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/datafiles/fire_mag.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/datafiles/potion_hp.png" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/anim_stay.tsx" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/jungle_tiles.tsx" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/map.tmx" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/run.py" beforeDir="false" afterPath="$PROJECT_DIR$/run.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/ztwPZOI.tsx" beforeDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -200,7 +196,14 @@
       <option name="project" value="LOCAL" />
       <updated>1705606700463</updated>
     </task>
-    <option name="localTasksCounter" value="4" />
+    <task id="LOCAL-00004" summary="добавил анимацию смерти врагамм и тд ...">
+      <created>1705702100001</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1705702100001</updated>
+    </task>
+    <option name="localTasksCounter" value="5" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -230,18 +233,10 @@
     <MESSAGE value="By Animixom 12.01.24 - чист оснонвание" />
     <MESSAGE value="++" />
     <MESSAGE value="сделал физику (она работает пока на моей карте)" />
-    <option name="LAST_COMMIT_MESSAGE" value="сделал физику (она работает пока на моей карте)" />
+    <MESSAGE value="добавил анимацию смерти врагамм и тд ..." />
+    <option name="LAST_COMMIT_MESSAGE" value="добавил анимацию смерти врагамм и тд ..." />
   </component>
   <component name="XDebuggerManager">
-    <breakpoint-manager>
-      <breakpoints>
-        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
-          <url>file://$PROJECT_DIR$/test.py</url>
-          <line>190</line>
-          <option name="timeStamp" value="3" />
-        </line-breakpoint>
-      </breakpoints>
-    </breakpoint-manager>
     <watches-manager>
       <configuration name="PythonConfigurationType">
         <watch expression="cur_list" />
